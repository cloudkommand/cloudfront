{
    "components": {
        "distribution": {
            "type": "ext",
            "displayname": "CK Cloudfront Distribution",
            "description": "Creates a Cloudfront Distribution. Cloudfront Distributions tell AWS where you want content to be delivered from on their CDN. This plugin can be used on its own to serve content, but is generally used as a part of the reactapp or angularapp plugins to host websites.",
            "cloud": "AWS",
            "resources": [
                "AWS::cloudfront::distribution"
            ],
            "policy": {
                "Version": "2012-10-17",
                "Statement": [{
                    "Sid": "Vis",
                    "Effect": "Allow",
                    "Action": [
                        "s3:GetBucketWebsite",
                        "cloudfront:GetDistribution",
                        "cloudfront:GetDistributionConfig",
                        "cloudfront:CreateDistribution",
                        "cloudfront:UpdateDistribution",
                        "cloudfront:DeleteDistribution",
                        "cloudfront:TagResource",
                        "cloudfront:UntagResource",
                        "acm:ListCertificates",
                        "acm:DescribeCertificate"
                    ],
                    "Resource": "*"
                }]
            },
            "input": {
                "type": "object",
                "properties": {
                    "aliases": {
                        "type": "array",
                        "description": "The alternate domain name(s) to associate with the distribution. For example, if you want hitting yourwebsite.com to reach your distribution, you would add yourwebsite.com to this list. You can also add subdomains, like www.yourwebsite.com, if you want those to reach your distribution as well."
                    },
                    "target_s3_bucket": {
                        "type": "object",
                        "description": "The name of the S3 bucket to serve content from. This bucket must already exist. If you want to create a new bucket, use the s3 plugin."
                    },
                    "default_root_object": {
                        "type": "string",
                        "description": "If a path is not specified in the URL, the default root object will be returned. For example, if you specify index.html as the default root object, CloudFront returns that object from your distribution when a user enters the URL http://www.example.com/",
                        "default": "index.html"
                    },
                    "target_ec2_instance": {
                        "type": "string",
                        "description": "The ID of the EC2 instance to serve content from. This instance must already exist."
                    },
                    "target_load_balancer": {
                        "type": "string",
                        "description": "The ID of the load balancer to serve content from. This load balancer must already exist."
                    },
                    "origin_path": {
                        "type": "string",
                        "description": "A subdirectory path to add to the origin. For example, if you want to serve content from the /static/ directory in your S3 bucket, you would specify /static here."
                    },
                    "origin_shield": {
                        "type": "boolean",
                        "description": "Whether you want to add origin shield to your distribution. It also incurs additional costs. See https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html"
                    },
                    "custom_origin_headers": {
                        "type": "object",
                        "description": "A set of key-value pairs to add to the origin request headers. For example, if you want to add a header called x-custom-header, you would specify {\"x-custom-header\": \"value\"} here. This is useful for some niche use cases, see https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html for more details."
                    },
                    "force_https": {
                        "type": "boolean",
                        "description": "If true, Cloudfront will always use HTTPS to connect to the origin. Otherwise, it will match the protocol the user used.",
                        "default": false
                    },
                    "allowed_ssl_protocols": {
                        "type": "array",
                        "description": "The SSL protocols that CloudFront can use when communicating with the origin. Allowed values in the array are TLSv1, TLSv1.1, TLSv1.2, and SSLv3",
                        "default": ["TLSv1", "TLSv1.1", "TLSv1.2"]
                    },
                    "price_class": {
                        "type": "string",
                        "description": "The price class for the CloudFront distribution. 100 costs the least, but distributes the content to the least number of regions, while All costs the most and distributes content to all AWS regions. See https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html",
                        "enum": ["All", "100", "200", "PriceClass_All", "PriceClass_100", "PriceClass_200"],
                        "default": "PriceClass_All"
                    },
                    "waf_web_acl_arn": {
                        "type": "string",
                        "description": "The ARN of the Web Application Firewall (WAF) web ACL to associate with the distribution. AWS WAF provides additional protections"
                    },
                    "web_acl_id": {
                        "type": "string",
                        "description": "A legacy parameter for the WAF web ACL ID for old-style WAF"
                    },
                    "logs_s3_bucket": {
                        "type": "string",
                        "description": "The s3 bucket to store logs in",
                        "default": null
                    },
                    "logs_include_cookies": {
                        "type": "boolean",
                        "description": "Whether to include cookies in the logs",
                        "default": false
                    },
                    "logs_prefix": {
                        "type": "string",
                        "description": "The object prefix to add to the log files in s3",
                        "default": ""
                    },
                    "key_group_ids": {
                        "type": "array",
                        "description": "A list of key groups that CloudFront can use to validate signed URLs or signed cookies"
                    },
                    "allowed_methods": {
                        "type": "array",
                        "description": "The allowed methods on this cloudfront distribution",
                        "enum": [
                            ["HEAD", "GET", "OPTIONS", "PUT", "PATCH", "POST", "DELETE"], 
                            ["HEAD", "GET", "OPTIONS"],
                            ["HEAD", "GET"]
                        ]
                    },
                    "cached_methods": {
                        "type": "array",
                        "description": "The cached methods on this cloudfront distribution",
                        "enum": [
                            ["HEAD", "GET", "OPTIONS"],
                            ["HEAD", "GET"]
                        ]
                    },
                    "cache_policy_id": {
                        "type": "string",
                        "description": "The ID of the cache policy to use for this cloudfront distribution. Pass this or cache_policy_name, but not both. See https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html",
                        "default": "658327ea-f89d-4fab-a63d-7e88639e58f6"
                    },
                    "cache_policy_name": {
                        "type": "string",
                        "description": "The name of the managed cache policy to use for this cloudfront distribution. Pass this or cache_policy_name, but not both. See https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html"
                    },
                    "tags": {
                        "type": "object",
                        "description": "A set of key-value pairs to attach to this Cloudfront distribution as tags"
                    }
                },
                "required": ["aliases"]
            },
            "props": {
                "id": {
                    "type": "string",
                    "description": "The ID of this distribution"
                },
                "domain_name": {
                    "type": "string",
                    "description": "The domain name assigned to the distribution"
                },
                "arn": {
                    "type": "string",
                    "description": "The ARN of the distribution"
                },
                "location": {
                    "type": "string",
                    "description": "Props from the route53 component deployed, if there is one"
                },
                "etag": {
                    "type": "string",
                    "description":"The etag of the distribution"
                },
                "certificate_arn": {
                    "type": "string",
                    "description": "The ARN of the ACM certificate used to validate the distribution"
                },
                "certificate_domain_name": {
                    "type": "string",
                    "description": "The domain name of the certificate used to validate the distribution"
                }
            }
        },
        "oai": {
            "type": "ext",
            "displayname": "CK Cloudfront OAI",
            "description": "Creates a Cloudfront Origin Access Identity (OAI). This is used to restrict access to an S3 bucket, in combination with an S3 bucket policy. This plugin is almost never used on its own, but is called by the reactapp and angularapp plugin.",
            "cloud": "AWS",
            "resources": ["AWS::cloudfront::oai"],
            "policy": {
                "Version": "2012-10-17",
                "Statement": [{
                    "Sid": "Vis",
                    "Effect": "Allow",
                    "Action": [
                        "cloudfront:CreateCloudFrontOriginAccessIdentity",
                        "cloudfront:GetCloudFrontOriginAccessIdentity",
                        "cloudfront:DeleteCloudFrontOriginAccessIdentity"
                    ],
                    "Resource": "*"
                }]
            },
            "input": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "A comment to add to the OAI"
                    }
                }
            },
            "props": {
                "id": {
                    "type": "string",
                    "description": "The ID of the OAI"
                },
                "arn": {
                    "type": "string",
                    "description": "The ARN of the OAI"
                },
                "s3_id": {
                    "type": "string",
                    "description": "The S3 canonical user ID for the OAI"
                },
                "etag": {
                    "type": "object",
                    "description": "The etag of the OAI"
                }
            }
        }
    },
    "repos": {
        "iam": "https://github.com/cloudkommand/iam"
    }
}
